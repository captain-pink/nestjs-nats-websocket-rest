version: '3.9'

networks:
  node-network:
    name: vehicles_observer

services:
  nats_server:
    restart: always
    image: 'bitnami/nats:latest'
    ports:
      - 4222:4222
      - 6222:6222
      - 8222:8222
    networks:
      - node-network

  api:
    restart: always
    build:
      context: .
      dockerfile: .docker/dockerfile.api
    volumes:
      - .:/usr/app/
      - /usr/app/node_modules
    command: npm run start api
    env_file:
      - .env/.dev.api
      - .env/.dev.common
    environment:
      MONGO_HOST: mongo
    depends_on:
      - mongo
    ports:
      - 3001:3001
    networks:
      - node-network

  loader:
    restart: always
    build:
      context: .
      dockerfile: .docker/dockerfile.loader
    volumes:
      - .:/usr/app/
      - /usr/app/node_modules
    command: npm run start loader
    env_file:
      - .env/.dev.loader
      - .env/.dev.common
    environment:
      MONGO_HOST: mongo
      NATS_HOST: nats_server
    depends_on:
      - mongo
      - nats_server
    ports:
      - 3000:3000
      - 1000:1000
    networks:
      - node-network

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - node-network

  mongo-express:
    image: mongo-express:0.49
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    networks:
      - node-network
